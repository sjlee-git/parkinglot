<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8"/>
	<title>무료공영주차장 API</title>
	<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script>
		var html = [];
			$.getJSON('https://jectpro-bucket.s3.ap-northeast-2.amazonaws.com/jectprodb3.json', function (data) {
				$.each(data, function (i,item) { // 업로드한 json 파일에서 총 6개의 자료를 불러온다.
					html.push(Number(item.latitude)); // 위도
					html.push(Number(item.longitude)); // 경도
					html.push(item.address); // 주소
					html.push(item.parking_name); // 주차장명
					html.push(item.parking_type); // 주차장종류
					html.push(item.special_note); // 특이사항
				});
			});
	</script>
</head>
<body>
	<!-- 지도를 표시할 div 입니다 -->
	<h1>무료 공영 주차장 API</h1>
	<div id="map" style="width:100%; height:100vh;"></div>
	<script type="text/javascript" src="http://dapi.kakao.com/v2/maps/sdk.js?appkey=29acbcae5ce3f4cfccc31c93794ccef9&libraries=clusterer"></script>
	<script>
		var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
			mapOption = {
				center: new kakao.maps.LatLng(html[0], html[1]), // 지도의 중심좌표
				level: 7 // 지도의 확대 레벨
			}; 

		// 지도를 생성한다
		var map = new kakao.maps.Map(mapContainer, mapOption);  

		// 마커 클러스터러를 생성한다
		var clusterer = new kakao.maps.MarkerClusterer({
			map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
			averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
			minLevel: 10 // 클러스터 할 최소 지도 레벨
		});

		var markers = [];

		for(var i=0; i<html.length; i++){
			if(i%6==0){ // json 파일에서 불러올 5개의 항목들이 잘 추출되었다면 지도에 마커를 찍는다
			var markerPosition = new kakao.maps.LatLng(html[i], html[i+1]);

			// 마커를 생성한다
			var marker = new kakao.maps.Marker({
				position: markerPosition
			});

			// 마커가 지도 위에 표시되도록 설정한다
			marker.setMap(map);
			var iwContent = (html[i] + html[i+1] + " 주소 : " + html[i+2] + html[i+3] + html[i+4] + html[i+5]), // 인포윈도우에 표춛될 내용
				iwPosition = new kakao.maps.LatLng(html[i], html[i+1]); // 인포윈도우 표시 위치

			 // 인포윈도우를 생성합니다
			 var infowindow = new kakao.maps.InfoWindow({
                position: iwPosition,
                content: iwContent
                });
            markers.push(marker);            
            // 이벤트 리스너로는 클로저를 만들어 등록합니다 
            kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
            kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
            }
        };

        // 클러스터러에 마커들을 추가합니다
        clusterer.addMarkers(markers);

        // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
        function makeOverListener(map, marker, infowindow) {
            return function () {
                infowindow.open(map, marker);
            };
        }

        // 인포윈도우를 닫는 클로저를 만드는 함수입니다 
        function makeOutListener(infowindow) {
            return function () {
                infowindow.close();
            };
        }
		
	</script>
</body>
</html>